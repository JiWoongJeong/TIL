"""
# Ladder1
출발점 x=0 및 x=9인 세로 방향의 두 막대 사이에 임의의 개수의 막대들이 랜덤 간격으로 추가되고
이 막대들 사이에 가로 방향의 선들이 또한 랜덤하게 연결
아래 방향으로 진행하면서 좌우 방향으로 이동 가능한 통로가 나타나면 방향 전환
100 x 100 크기의 2차원 배열로 주어진 사다리에 대해서, 지정된 도착점에 대응되는 출발점 X를 반환하는 코드를 작성
‘0’으로 채워진 평면상에 사다리는 연속된 ‘1’로 표현된다. 도착 지점은 '2'로 표현

총 10개의 테스트 케이스

# 부호와 함께 테스트 케이스의 번호를 출력하고, 공백 문자 후 도착하게 되는 출발점의 x 좌표를 출력
"""

for tc in range(10):
    n = int(input())
    ladder = [list(map(int, input().split())) for _ in range(100)]
    # 끝나는 지점 (2) 찾기
    for i in range(100):
        if ladder[99][i] == 2:
            end = i
    # 출발점 x, y 지정
    x, y = 99, end
    # 맨 윗줄에 도달하기 전까지
    while x > 0:
        # 방문한 지점은 다시 돌아가지 못하도록 9로 표시
        ladder[x][y] = 9
        # 왼쪽에 1이 있으면 이동
        if y - 1 >= 0 and ladder[x][y - 1] == 1:
            y -= 1
        # 오른쪽에 1이 있으면 이동
        elif y + 1 <= 99 and ladder[x][y + 1] == 1:
            y += 1
        # 왼 오 둘 다 1없으면 한 칸 위로 이동
        elif ladder[x - 1][y] == 1:
            x -= 1

    # x가 0일 때 y값 출력 (사다리의 시작점)
    print(f'#{tc + 1} {y}')